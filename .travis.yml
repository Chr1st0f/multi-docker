# Need superuser level
sudo: required
# Request to travis docker cli ready to go 
services:
  - docker

# Create a test container into ./client context ( last field ) 
before_install:
  - docker build -t ccazin/react-test -f ./client/Dockerfile.dev ./client

# The script has to return 0 to validate test 
script:
  - docker run ccazin/react-test npm run test -- --version
  # should be 
  #  - docker run ccazin/docker-react npm run test -- --coverage

after_success:
  - docker build ccazin/multi-client ./client
  - docker build ccazin/multi-nginx ./nginx
  - docker build ccazin/multi-server ./server
  - docker build ccazin/multi-worker ./worker

  # Log in to the docker CLI
  - echo "DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin

  # Take those images and push them to docker hub
  docker push ccazin/multi-client
  docker push ccazin/multi-nginx
  docker push ccazin/multi-server
  docker push ccazin/multi-worker

# Deployment on AWS
# deploy:
#   provider: elasticbeanstalk
#   region: "eu-west-3"  
#   app: "docker-react"
#   env: "DockerReact-env"
#   bucket_name: "elasticbeanstalk-eu-west-3-457357339164"
#   bucket_path: "docker-react"
#   on:
#     branch: master
#   access_key_id: $AWS_ACCESS_KEY
#   secret_access_key:
#     secure: "$AWS_SECRET_KEY"
